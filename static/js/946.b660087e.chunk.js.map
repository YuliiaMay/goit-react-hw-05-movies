{"version":3,"file":"static/js/946.b660087e.chunk.js","mappings":"sNAGaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,yEAKRE,EAAOF,EAAAA,GAAAA,IAAH,0QAcJG,EAAQH,EAAAA,GAAAA,IAAH,sHAQLI,EAAgBJ,EAAAA,GAAAA,IAAH,wJAQbK,EAAQL,EAAAA,GAAAA,EAAH,iHAOLM,EAASN,EAAAA,GAAAA,EAAH,mF,uCChBnB,EAxBkB,SAAC,GAAsC,IAAD,EAAnCO,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAQC,EAAa,EAAbA,OACjCC,EAAQ,mDAAqCH,UAArC,QAA8C,mBAE5D,OACI,UAACN,EAAD,YACI,UAACH,EAAD,CAAUa,GAAE,kBAAaL,GAAzB,WACI,SAACJ,EAAD,CAAOK,IACHA,EACMG,EACAE,EAENC,IAAKL,KACT,UAACL,EAAD,YACI,SAACC,EAAD,UAAQI,KACR,UAACH,EAAD,sBAAiBI,YAGzB,SAAC,EAAAK,SAAD,CAAUC,UAAU,6CAApB,UACI,SAAC,KAAD,QAIf,ECzBYC,EAAOjB,EAAAA,GAAAA,GAAH,sNCuBjB,EApBgB,SAAC,GAAgB,IAAdkB,EAAa,EAAbA,OACf,OACI,SAACD,EAAD,UAEQC,EAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,kBAAmBZ,EAA1B,EAA0BA,MAAOa,EAAjC,EAAiCA,aAAcC,EAA/C,EAA+CA,YAAaC,EAA5D,EAA4DA,aAA5D,OACP,SAAC,EAAD,CAEIjB,QAASa,EACTZ,IAAKe,EACLd,MAAOA,EACPgB,SAAUJ,EACVX,OAAQY,EACRI,QAASF,GANJJ,EAFF,KAc1B,C,wJCrBYf,E,QAAQL,GAAAA,GAAH,2L,SC8BlB,EA1Ba,WACT,OAA4B2B,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,WAAyBC,GAAzB,iGAE2BC,EAAAA,EAAAA,MAF3B,cAEcC,EAFd,OAGQJ,EAAUI,EAAKC,SAHvB,kBAKeD,GALf,gCAOQE,QAAQC,IAAI,KAAMC,SAP1B,0DADY,uBAAC,SAAD,2BAYZC,EACH,GAAE,KAGC,6BACI,SAACjC,EAAD,8BACA,SAACkC,EAAA,EAAD,CAASrB,OAAQU,MAG5B,C,mMCxBM,SAAeI,IAAtB,4CAAO,OAAP,oBAAO,6GAEwBQ,EAAAA,EAAAA,IAAA,sBAFxB,UAGyB,OADlBC,EAFP,QAGcC,OAHd,yCAIYD,EAASR,MAJrB,uDAOCE,QAAQC,IAAI,KAAMC,SAPnB,gFAWA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,gGAEwBJ,EAAAA,EAAAA,IAAA,8BAAiCI,IAFzD,UAGyB,OADlBH,EAFP,QAGcC,OAHd,yCAIYD,EAASR,MAJrB,uDAOCE,QAAQC,IAAI,KAAMC,SAPnB,gFAWA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAiCzB,GAAjC,gGAEwBoB,EAAAA,EAAAA,IAAA,iBAAoBpB,IAF5C,UAGyB,OADlBqB,EAFP,QAGcC,OAHd,yCAIYD,EAASR,MAJrB,uDAOCE,QAAQC,IAAI,KAAMC,SAPnB,gFAWA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAA8B1B,GAA9B,gGAEwBoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,aAFxB,UAGyB,OADlBqB,EAFP,QAGcC,OAHd,yCAIYD,EAASR,MAJrB,uDAOCE,QAAQC,IAAI,KAAMC,SAPnB,gFAWA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAAiC3B,GAAjC,gGAEwBoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,aAFxB,UAGyB,OADlBqB,EAFP,QAGcC,OAHd,yCAIYD,EAASR,MAJrB,uDAOCE,QAAQC,IAAI,KAAMC,SAPnB,gFA/CPG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CAAEQ,QAFV,mC","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/Gallery/Gallery.styled.js","components/Gallery/Gallery.jsx","pages/Home.styled.js","pages/Home.jsx","services/movies-api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const CardLink = styled(Link)`\n    text-decoration: none;\n    color: #446381;\n` \n\nexport const Card = styled.div`\n    width: 325px;\n    height: 600px;\n    cursor: pointer;\n    border: 3px solid #FFC5B3;\n    background-color: #C37A87;\n    max-width: calc((100% - 3 * 30px) / 4);\n\n    &:hover,\n    &:focus {\n        transform: scale(1.015);\n    }\n`;\n\nexport const Image = styled.img`\n    display: block;\n    max-width: 100%;\n    height: 490px;\n    background-size: cover;\n\n`;\n\nexport const CardMovieInfo = styled.div`\n    padding: 8px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: center;\n`;\n\nexport const Title = styled.p`\n    margin-top: 0;\n    margin-bottom: 12px;\n    font-size: 24px;\n    color: #FFFFFF;\n`;\n\nexport const Rating = styled.p`\n    margin: 0;\n    font-size: 20px;\n    color: #446381;\n`;\n\n","import { CardLink, Card, Image, CardMovieInfo, Title, Rating } from \"./MovieCard.styled\";\nimport { Outlet} from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport defaulMovieImage from '../../images/default-movie.jpg';\n\nconst MovieCard = ({ movieId, src, title,  rating }) => {\n    const movieImg = `https://image.tmdb.org/t/p/w500${src}` ?? '/src/default.jpg';\n\n    return (\n        <Card>\n            <CardLink to={`/movies/${movieId}`}>\n                <Image src={\n                    src\n                        ? movieImg\n                        : defaulMovieImage\n                    }\n                    alt={title} />\n                <CardMovieInfo>\n                    <Title>{title}</Title>\n                    <Rating>Rating: {rating}</Rating>\n                </CardMovieInfo>\n            </CardLink>\n            <Suspense fallback={<div>Loading page...</div>}>\n                <Outlet />\n            </Suspense>\n        </Card>\n    )\n}\n\nexport default MovieCard;","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    max-width: 1400px;\n    margin: auto;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 24px;\n`;","import MovieCard from \"components/MovieCard/MovieCard\";\nimport { List } from \"./Gallery.styled\";\n\n\n\nconst Gallery = ({ movies }) => {\n    return (\n        <List> \n            {\n                movies.map(({ id, original_language, title, vote_average, poster_path, release_date }) => \n                    <MovieCard\n                        key={id}\n                        movieId={id}\n                        src={poster_path}\n                        title={title}\n                        language={original_language}\n                        rating={vote_average}\n                        release={release_date}\n                    />\n                )\n            }\n        </List>\n    )\n};\n\nexport default Gallery;","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n    margin-top: 40px;\n    margin-bottom: 40px;  \n    font-size: 40px;\n    color: #414141;\n    width: 1400px;\n    margin-left: auto;\n    margin-right: auto;\n`;","import { useState, useEffect } from \"react\";\nimport { fetchTrandingMovies } from \"services/movies-api\";\nimport Gallery from \"components/Gallery/Gallery\";\nimport { Title } from \"./Home.styled\";\n\n\nconst Home = () => {\n    const [trends, setTrends] = useState([]);\n\n    useEffect(() => {\n        async function getTrends(page) {\n            try {\n                const data = await fetchTrandingMovies();\n                setTrends(data.results);\n                \n                return data;\n            } catch(error) {\n                console.log(error.message);\n            }\n        }\n\n        getTrends();\n    }, []);\n\n    return (\n        <main>\n            <Title>Tranding today</Title>\n            <Gallery movies={trends} />\n        </main>\n    )\n}\n\nexport default Home;","import axios from \"axios\";\n\nconst API_KEY = '0feaca93847c0f717b0c2876a0a51030';\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = { api_key: API_KEY };\n\nexport async function fetchTrandingMovies() {\n    try {\n        const response = await axios.get(`trending/movie/day`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMoviesByQuery(query) {\n    try {\n        const response = await axios.get(`/search/movie?query=${query}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieDetails(id) {\n    try {\n        const response = await axios.get(`/movie/${id}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieCast(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/credits`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieReviews(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}"],"names":["CardLink","styled","Link","Card","Image","CardMovieInfo","Title","Rating","movieId","src","title","rating","movieImg","to","defaulMovieImage","alt","Suspense","fallback","List","movies","map","id","original_language","vote_average","poster_path","release_date","language","release","useState","trends","setTrends","useEffect","page","fetchTrandingMovies","data","results","console","log","message","getTrends","Gallery","axios","response","status","fetchMoviesByQuery","query","fetchMovieDetails","fetchMovieCast","fetchMovieReviews","api_key"],"sourceRoot":""}