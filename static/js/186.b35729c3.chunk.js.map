{"version":3,"file":"static/js/186.b35729c3.chunk.js","mappings":"yNAkDA,UA5CgB,WACZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,WAAyBL,GAAzB,wFACuBM,EAAAA,EAAAA,IAAkBN,GADzC,OACUO,EADV,OAEIH,EAAgBG,EAAKC,SAFzB,2CADY,yBAAC,SAAD,2BAMZC,CAAUT,EAGb,GAAE,CAACA,KAGA,0BACI,wBAEQG,EAAaO,KAAI,YAAsC,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAClBC,EAD4C,EAAjBC,WACFC,MAAM,EAAG,IAExC,OACKZ,EAAaa,OAAS,GAEd,2BACG,uBAAIJ,KACJ,uBAAID,KACJ,uCAAeE,SAGrB,kEAGb,OAQpB,C,+LC1CM,SAAeI,IAAtB,4CAAO,OAAP,oBAAO,6GAEwBC,EAAAA,EAAAA,IAAA,sBAFxB,UAGyB,OADlBC,EAFP,QAGcC,OAHd,yCAIYD,EAASZ,MAJrB,uDAOCc,QAAQC,IAAI,KAAMC,SAPnB,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,gGAEwBP,EAAAA,EAAAA,IAAA,8BAAiCO,IAFzD,UAGyB,OADlBN,EAFP,QAGcC,OAHd,yCAIYD,EAASZ,MAJrB,uDAOCc,QAAQC,IAAI,KAAMC,SAPnB,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gGAEwBT,EAAAA,EAAAA,IAAA,iBAAoBS,IAF5C,UAGyB,OADlBR,EAFP,QAGcC,OAHd,yCAIYD,EAASZ,MAJrB,uDAOCc,QAAQC,IAAI,KAAMC,SAPnB,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,gGAEwBT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aAFxB,UAGyB,OADlBR,EAFP,QAGcC,OAHd,yCAIYD,EAASZ,MAJrB,uDAOCc,QAAQC,IAAI,KAAMC,SAPnB,gFAWA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCqB,GAAjC,gGAEwBT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aAFxB,UAGyB,OADlBR,EAFP,QAGcC,OAHd,yCAIYD,EAASZ,MAJrB,uDAOCc,QAAQC,IAAI,KAAMC,SAPnB,gFA/CPL,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CAAEW,QAFV,mC","sources":["components/Reviews/Reviews.jsx","services/movies-api.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieReviews } from \"services/movies-api\";\n\n\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [movieReviews, setMovieReviews] = useState([]);\n\n    useEffect(() => {\n        async function getReview(movieId) {\n            const data = await fetchMovieReviews(movieId);\n            setMovieReviews(data.results);\n        };\n\n        getReview(movieId);\n\n\n    }, [movieId])\n        \n    return (\n        <div>\n            <ul>\n                {\n                    movieReviews.map(({ author, content, updated_at }) => {\n                        const publishDate = updated_at.slice(0, 10);\n\n                        return (\n                            (movieReviews.length > 0)\n                                ?\n                                    (<li>\n                                        <p>{content}</p>\n                                        <p>{author}</p>\n                                        <p>Published: {publishDate}</p>\n                                    </li>)\n                                    \n                                : <p>Unfortunately we have not founf reviews</p>\n                            \n                        )\n                    }\n\n                    )\n                }\n            </ul>\n\n        </div>\n    )\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst API_KEY = '0feaca93847c0f717b0c2876a0a51030';\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = { api_key: API_KEY };\n\nexport async function fetchTrandingMovies() {\n    try {\n        const response = await axios.get(`trending/movie/day`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMoviesByQuery(query) {\n    try {\n        const response = await axios.get(`/search/movie?query=${query}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieDetails(id) {\n    try {\n        const response = await axios.get(`/movie/${id}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieCast(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/credits`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieReviews(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}"],"names":["movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","fetchMovieReviews","data","results","getReview","map","author","content","publishDate","updated_at","slice","length","fetchTrandingMovies","axios","response","status","console","log","message","fetchMoviesByQuery","query","fetchMovieDetails","id","fetchMovieCast","api_key"],"sourceRoot":""}