{"version":3,"file":"static/js/33.75688a84.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/movies-api.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.section`\n    max-width: 1300px;\n    margin: auto;\n    display: flex;\n    flex-direction: row;\n    gap: 36px;\n    border: 2px solid #EB8382;\n    padding: 40px;\n`;\n\nexport const Image = styled.img`\n    max-height: 600px;\n`;\n\nexport const MovieInfo = styled.div`\n    color: #826F8C;\n    font-size: 24px;\n    \n`;\n\nexport const MovieTitle = styled.h1`\n    margin: 0;\n    font-size: 40px;\n    color: #414141;\n    margin-bottom: 48px; \n`;\n\nexport const ReleaseDate = styled.span`\n    // color: #446381;\n`;\n\nexport const Score = styled.p`\n    margin-bottom: 32px; \n`;\n\nexport const Subtitle = styled.h2`\n    margin-bottom: 24px; \n    font-size: 36px;\n    color: #446381;\n`;\n\nexport const Overview = styled.p`\n    margin-bottom: 32px; \n`;\n\nexport const Genres = styled.ul`\n    // margin-bottom: 24px; \n    // font-size: 36px;\n    // color: #446381;\n    display: flex;\n    flex-direction: row;\n    gap: 24px;\n`;\n\nexport const GenresItem = styled.li`\n    background-color: #EB8382;\n    padding: 8px;\n    border-radius: 20px;\n`;\n\nexport const Genre = styled.span`\n    color: #fff;\n`;\n\nexport const AdditionalContainer = styled.section`\n    max-width: 1300px;\n    margin: auto;\n    border-bottom: 2px solid #EB8382;\n    border-left: 2px solid #EB8382;\n    border-right: 2px solid #EB8382;\n    padding: 40px;\n    color: #826F8C;\n    font-size: 24px;\n    \n`;\n\nexport const InfoList = styled.ul`\n    display: flex;\n    flex-direction: row;\n    gap: 36px;\n`;\n\nexport const InfoItem = styled.li`\n    background-color: #fff;\n    \n    border-radius: 20px;\n    border: 1px solid #EB8382;\n`;\n\n\nexport const StyledNavLink = styled(NavLink)`\n    padding: 8px;\n\n    &:active {\n        background-color: #EB8382;\n    }\n`;\n\n\n\n\n","import { useState, useEffect } from \"react\";\nimport { useParams, Link, Outlet } from \"react-router-dom\";\nimport { fetchMovieDetails } from \"services/movies-api\";\nimport { Container, Image, MovieTitle, MovieInfo, ReleaseDate, Score, Subtitle, Overview, Genres, GenresItem, Genre, AdditionalContainer, InfoList, InfoItem, StyledNavLink} from \"./MovieDetails.styled\";\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState({});\n    const [genres, setGenres] = useState([]);\n\n    \n\n    useEffect(() => {\n        async function getMovie(movieId) {\n            const movie = await fetchMovieDetails(movieId);\n            setMovie(movie);\n            setGenres(movie.genres)\n        }\n        getMovie(movieId);\n    }, [movie, movieId]);\n\n    \n\n    return (\n        \n            movieId && (\n                <div>\n                    <Link to='movies'>Go back</Link>\n                    <Container>\n                        <Image src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.original_title} />\n                        <MovieInfo>\n                            <MovieTitle>\n                                <span>{movie.original_title}</span>\n                                <ReleaseDate>   ({movie.release_date && movie.release_date.slice(0, 4)})  </ReleaseDate>\n                            </MovieTitle>\n                            <Score>User Score - {movie.vote_average}</Score>\n                            <div>\n                                <Subtitle>Overview</Subtitle>\n                                <Overview>{movie.overview}</Overview>\n                            </div>\n                            <div>\n                                <Subtitle>Genres</Subtitle>\n                                <Genres>\n                                    {\n                                        genres.map(({name}) =>\n                                            <GenresItem>\n                                                <Genre>{name}</Genre>\n                                            </GenresItem>\n                                        )\n                                    }\n                                </Genres>\n                            </div>\n                        </MovieInfo>\n                    </Container>\n                    <AdditionalContainer>\n                        <Subtitle>Additional information</Subtitle>\n                        <InfoList>\n                            <InfoItem><StyledNavLink to=\"cast\">Cast</StyledNavLink></InfoItem>\n                            <InfoItem><StyledNavLink to=\"reviews\">Review</StyledNavLink></InfoItem>\n                        </InfoList>\n                        <Outlet/>\n                    </AdditionalContainer>\n                </div>\n            )\n        \n        \n    )\n};\n\nexport default MovieDetails;","import axios from \"axios\";\n\nconst API_KEY = '0feaca93847c0f717b0c2876a0a51030';\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = { api_key: API_KEY };\n\nexport async function fetchTrandingMovies() {\n    try {\n        const response = await axios.get(`trending/movie/day`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMoviesByQuery(query) {\n    try {\n        const response = await axios.get(`/search/movie?query=${query}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieDetails(id) {\n    try {\n        const response = await axios.get(`/movie/${id}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieCast(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/credits`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieReviews(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}"],"names":["Container","styled","Image","MovieInfo","MovieTitle","ReleaseDate","Score","Subtitle","Overview","Genres","GenresItem","Genre","AdditionalContainer","InfoList","InfoItem","StyledNavLink","NavLink","movieId","useParams","useState","movie","setMovie","genres","setGenres","useEffect","fetchMovieDetails","getMovie","to","src","poster_path","alt","original_title","release_date","slice","vote_average","overview","map","name","fetchTrandingMovies","axios","response","status","data","console","log","message","fetchMoviesByQuery","query","id","fetchMovieCast","fetchMovieReviews","api_key"],"sourceRoot":""}