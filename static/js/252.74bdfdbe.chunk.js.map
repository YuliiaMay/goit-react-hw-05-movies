{"version":3,"file":"static/js/252.74bdfdbe.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/Gallery/Gallery.styled.js","components/Gallery/Gallery.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/movies-api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const CardLink = styled(Link)`\n    text-decoration: none;\n    color: #446381;\n` \n\nexport const Card = styled.div`\n    width: 325px;\n    height: 600px;\n    cursor: pointer;\n    border: 3px solid #FFC5B3;\n    background-color: #C37A87;\n\n    &:hover,\n    &:focus {\n        transform: scale(1.015);\n    }\n`;\n\nexport const Image = styled.img`\n    display: block;\n    max-width: 100%;\n    height: 490px;\n    background-size: cover;\n\n`;\n\nexport const CardMovieInfo = styled.div`\n    padding: 8px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: center;\n`;\n\nexport const Title = styled.p`\n    margin-top: 0;\n    margin-bottom: 12px;\n    font-size: 24px;\n    color: #FFFFFF;\n`;\n\nexport const Rating = styled.p`\n    margin: 0;\n    font-size: 20px;\n    color: #446381;\n`;\n\n","import { CardLink, Card, Image, CardMovieInfo, Title, Rating } from \"./MovieCard.styled\";\nimport { Outlet} from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport defaulMovieImage from '../../images/default-movie.jpg';\n\nconst MovieCard = ({ movieId, src, title,  rating }) => {\n    const movieImg = `https://image.tmdb.org/t/p/w500${src}` ?? '/src/default.jpg';\n\n    return (\n        <Card>\n            <CardLink to={`${movieId}`}>\n                <Image src={\n                    src\n                        ? movieImg\n                        : defaulMovieImage\n                    }\n                    alt={title} />\n                <CardMovieInfo>\n                    <Title>{title}</Title>\n                    <Rating>Rating: {rating}</Rating>\n                </CardMovieInfo>\n            </CardLink>\n            <Suspense fallback={<div>Loading page...</div>}>\n                <Outlet />\n            </Suspense>\n        </Card>\n    )\n}\n\nexport default MovieCard;","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 40px;\n    width: calc(100% - ((100% - 40px) / 5);\n`;","import MovieCard from \"components/MovieCard/MovieCard\";\nimport { List } from \"./Gallery.styled\";\n\n\n\nconst Gallery = ({ movies }) => {\n\n    return (\n        <List> \n            {\n                movies.map(({ id, original_language, title, vote_average, poster_path, release_date }) => \n                    <MovieCard\n                        key={id}\n                        movieId={id}\n                        src={poster_path}\n                        title={title}\n                        language={original_language}\n                        rating={vote_average}\n                        release={release_date}\n                    />\n                )\n            }\n        </List>\n    )\n};\n\nexport default Gallery;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: center;\n    justifyContent: center;\n    overflow: hidden;\n`;\n\nexport const Form = styled.form`\n    padding: 0;\n    display: flex;\n\n\n    &:hover,\n    &:focus,\n    &:active {\n        border: 3px solid #EB8382;\n        box-shadow: 4px 2px 1px 1px #EAAC8B;\n    }\n`\n\nexport const SearchInput = styled.input`\n    width: 400px;\n    margin-top: 0; \n    height: 30px;\n    font-size: 24px;\n    color: #446381;\n    padding: 8px;\n    background-color: #FEF1E9;\n    border: none;\n`;\n\nexport const SearchFormButton = styled.button`\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n    \n    &:hover {\n        opacity: 1;\n    }\n`;","import { FcSearch } from \"react-icons/fc\";\nimport { Container, Form, SearchInput, SearchFormButton } from \"./SearchForm.styled\";\n// import { toast } from 'react-toastify';\n\n\nconst SearchForm = ({onSubmit}) => {\n    //     if (query.trim() === '') {\n    //         toast('Please enter a search query', {\n    //             position: \"top-center\",\n    //             autoClose: 5000,\n    //             hideProgressBar: false,\n    //             closeOnClick: true,\n    //             pauseOnHover: true,\n    //             draggable: true,\n    //             progress: undefined,\n    //             theme: \"light\",\n    //         });\n\n\n\n    return (\n        <Container>\n            <Form onSubmit={onSubmit}>\n                <SearchInput\n                    type=\"text\"\n                    name=\"title\"\n                />\n                <SearchFormButton type=\"submit\">\n                    <FcSearch size={32}/>\n                </SearchFormButton>\n            </Form>\n        </Container>\n        \n    )\n}\n\nexport default SearchForm;","// import { Link, Outlet } from \"react-router-dom\";\nimport { useSearchParams } from \"react-router-dom\";\nimport SearchForm from \"components/SearchForm/SearchForm\";\n// import { useState } from \"react\";\nimport { fetchMoviesByQuery } from \"services/movies-api\";\nimport { useState, useEffect } from \"react\";\n// import FoundMoviesList from \"components/FoundMoviesList/FoundMoviesList\";\nimport Gallery from \"components/Gallery/Gallery\";\nimport { toast } from 'react-toastify';\n\n\n// const Status = {\n//     IDLE: 'idle',\n//     PENDING: 'pending',\n//     RESOLVED: 'resolved',\n//     REJECTED: 'rejected'\n// }\n\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const title = (searchParams.get(\"title\") ?? \"\").trim();\n    \n\n\n\n    useEffect(() => {\n        if (title === '') return;\n\n        setMovies([]);\n\n        async function getMovies(title) {\n            try {\n                const data = await fetchMoviesByQuery(title);\n                const foundMovies = data.results;\n                const sortedMoviesm = foundMovies.sort((firstMovie, secondMovie) =>\n                    secondMovie.vote_average - firstMovie.vote_average\n                )\n                setMovies(sortedMoviesm);\n            } catch (error) {\n                console.log(error);\n                toast.error('No results found', { duration: 3000 });\n            }\n        }\n\n        getMovies(title);\n    }, [title])\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        const searchQuery = form.elements.title.value;\n        setSearchParams({ title: searchQuery });\n        form.reset();\n    }\n\n\n    return (\n        <main>\n            <SearchForm\n                onSubmit={handleSubmit}\n            />\n            <Gallery movies={movies}/>\n        </main>\n    )\n}\n\nexport default Movies;","import axios from \"axios\";\n\nconst API_KEY = '0feaca93847c0f717b0c2876a0a51030';\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = { api_key: API_KEY };\n\nexport async function fetchTrandingMovies() {\n    try {\n        const response = await axios.get(`trending/movie/day`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMoviesByQuery(query) {\n    try {\n        const response = await axios.get(`/search/movie?query=${query}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieDetails(id) {\n    try {\n        const response = await axios.get(`/movie/${id}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieCast(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/credits`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieReviews(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}"],"names":["CardLink","styled","Link","Card","Image","CardMovieInfo","Title","Rating","movieId","src","title","rating","movieImg","to","defaulMovieImage","alt","Suspense","fallback","List","movies","map","id","original_language","vote_average","poster_path","release_date","language","release","Container","Form","SearchInput","SearchFormButton","onSubmit","type","name","size","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","trim","useEffect","fetchMoviesByQuery","data","foundMovies","results","sortedMoviesm","sort","firstMovie","secondMovie","console","log","toast","duration","getMovies","e","preventDefault","form","currentTarget","searchQuery","elements","value","reset","Gallery","fetchTrandingMovies","axios","response","status","message","query","fetchMovieDetails","fetchMovieCast","fetchMovieReviews","api_key"],"sourceRoot":""}