{"version":3,"file":"static/js/884.638b57ad.chunk.js","mappings":"iOAgEA,UA5DqB,WACjB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,WAAwBL,GAAxB,wFACoBM,EAAAA,EAAAA,IAAkBN,GADtC,OACMG,EADN,OAEAC,EAASD,GAFT,2CADY,yBAAC,SAAD,2BAchBI,CAASP,EAER,GAAE,CAACA,IAIIA,IACI,4BAEI,4BACI,gBAAKQ,IAAI,GAAGC,IAAI,MAChB,4BACI,2BACI,0BAAON,EAAMO,kBACb,mCAAWP,EAAMQ,aAAjB,WAER,yCAAiBR,EAAMS,iBACnB,4BACI,sCACA,uBAAIT,EAAMU,eAEd,4BACI,oCACA,2BAIZ,4BACI,oDACA,2BACI,yBAAI,SAAC,KAAD,CAAMC,GAAG,OAAT,qBACJ,yBAAI,SAAC,KAAD,CAAMA,GAAG,UAAT,0BAER,SAAC,KAAD,SAOvB,C,+LCxDM,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEwBC,EAAAA,EAAAA,IAAA,sBAFxB,UAGyB,OADlBC,EAFP,QAGcC,OAHd,yCAIYD,EAASE,MAJrB,uDAOCC,QAAQC,IAAI,KAAMC,SAPnB,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,gGAEwBR,EAAAA,EAAAA,IAAA,8BAAiCQ,IAFzD,UAGyB,OADlBP,EAFP,QAGcC,OAHd,yCAIYD,EAASE,MAJrB,uDAOCC,QAAQC,IAAI,KAAMC,SAPnB,gFAWA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCmB,GAAjC,gGAEwBT,EAAAA,EAAAA,IAAA,iBAAoBS,IAF5C,UAGyB,OADlBR,EAFP,QAGcC,OAHd,yCAIYD,EAASE,MAJrB,uDAOCC,QAAQC,IAAI,KAAMC,SAPnB,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,gGAEwBT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aAFxB,UAGyB,OADlBR,EAFP,QAGcC,OAHd,yCAIYD,EAASE,MAJrB,uDAOCC,QAAQC,IAAI,KAAMC,SAPnB,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,gGAEwBT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aAFxB,UAGyB,OADlBR,EAFP,QAGcC,OAHd,yCAIYD,EAASE,MAJrB,uDAOCC,QAAQC,IAAI,KAAMC,SAPnB,gFA/CPN,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CAAEY,QAFV,mC","sources":["pages/MovieDetails.jsx","services/movies-api.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams, Link, Outlet } from \"react-router-dom\";\nimport { fetchMovieDetails } from \"services/movies-api\";\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState({});\n\n    useEffect(() => {\n        async function getMovie(movieId) {\n        const movie = await fetchMovieDetails(movieId);\n        setMovie(movie);\n        \n\n        // const {backdrop_path, genres,\n        //     original_title,\n        //     overview,\n        //     popularity,\n        //     poster_path,\n        //     release_date } = movie;\n        \n    }\n    getMovie(movieId);\n\n    }, [movieId]);\n\n    return (\n        \n            movieId && (\n                <div>\n                    {/* <a href=\"\">Go back</a> */}\n                    <div>\n                        <img src=\"\" alt=\"\" />\n                        <div>\n                            <h1>\n                                <span>{movie.original_title}</span>\n                                <span>   ({movie.release_date})</span>\n                            </h1>\n                        <p>User Score - {movie.vote_average}</p>\n                            <div>\n                                <h2>Overview</h2>\n                                <p>{movie.overview}</p>\n                            </div>\n                            <div>\n                                <h2>Genres</h2>\n                                <p></p>\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <h3>Additional information</h3>\n                        <ul>\n                            <li><Link to=\"cast\">Cast</Link></li>\n                            <li><Link to=\"reviews\">Review</Link></li>\n                        </ul>\n                        <Outlet/>\n                    </div>\n                </div>\n            )\n        \n        \n    )\n};\n\nexport default MovieDetails;","import axios from \"axios\";\n\nconst API_KEY = '0feaca93847c0f717b0c2876a0a51030';\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = { api_key: API_KEY };\n\nexport async function fetchTrandingMovies() {\n    try {\n        const response = await axios.get(`trending/movie/day`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMoviesByQuery(query) {\n    try {\n        const response = await axios.get(`/search/movie?query=${query}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieDetails(id) {\n    try {\n        const response = await axios.get(`/movie/${id}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieCast(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/credits`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport async function fetchMovieReviews(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews`);\n        if (response.status === 200) {\n            return response.data;\n        }\n    } catch(error) {\n        console.log(error.message);\n    }\n}"],"names":["movieId","useParams","useState","movie","setMovie","useEffect","fetchMovieDetails","getMovie","src","alt","original_title","release_date","vote_average","overview","to","fetchTrandingMovies","axios","response","status","data","console","log","message","fetchMoviesByQuery","query","id","fetchMovieCast","fetchMovieReviews","api_key"],"sourceRoot":""}